{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/comlink/index.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/History.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/Meta.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaContext.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/schema/useSchema.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/context-menu/contextMenuItems.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/context-menu/ContextMenu.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsContext.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/ElementOverlay.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/preview/usePreviewSnapshots.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/OverlayDragGroupRect.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/OverlayDragInsertMarker.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/OverlayDragPreview.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/OverlayMinimapPrompt.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/elementsReducer.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/overlayStateReducer.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsProvider.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaProvider.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateProvider.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/Overlays.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/util/useDragEvents.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/useController.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/usePerspectiveSync.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/useReportDocuments.ts","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/Refresh.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/VisualEditing.tsx","file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/node_modules/next-sanity/node_modules/%40sanity/visual-editing/src/ui/optimistic-state/machines/createSharedListener.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {SanityEncoder, type Transaction} from '@sanity/mutate'\nimport {documentMutatorMachine} from '@sanity/mutate/_unstable_machine'\nimport {fromPromise} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\nimport {datasetMutatorMachine} from '../optimistic-state/machines/datasetMutatorMachine'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDatasetMutator = (comlink: VisualEditingNode) => {\n  const fetchSnapshot = fromPromise(\n    async ({input, signal}: {input: {id: string; client: SanityClient}; signal: AbortSignal}) => {\n      const {id} = input\n      const {snapshot} = await comlink.fetch(\n        {\n          type: 'visual-editing/fetch-snapshot',\n          data: {documentId: id},\n        },\n        {\n          signal,\n        },\n      )\n      return snapshot\n    },\n  )\n\n  const submitMutations = fromPromise(\n    async ({input}: {input: {client: SanityClient; transactions: Transaction[]}}) => {\n      const {transactions} = input\n      for (const transaction of transactions) {\n        const data = SanityEncoder.encodeTransaction(transaction)\n        return comlink.post({type: 'visual-editing/mutate', data})\n      }\n    },\n  )\n\n  const datasetMutatorMachineWithComlink = datasetMutatorMachine.provide({\n    actors: {\n      documentMutatorMachine: documentMutatorMachine.provide({\n        actors: {\n          'fetch remote snapshot': fetchSnapshot,\n          'submit mutations as transactions': submitMutations,\n        },\n      }),\n    },\n  })\n\n  return datasetMutatorMachineWithComlink\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post({type: 'visual-editing/navigate', data: update})\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post({\n        type: 'visual-editing/meta',\n        data: {title: document.title},\n      })\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@repo/visual-editing-helpers'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\nimport type {OptimisticDocument} from '../optimistic-state/useDocuments'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(({snapshot}) => getArrayRemovePatches(node, snapshot))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(({snapshot}) => getArrayDuplicatePatches(node, snapshot))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): ContextMenuNode[] {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return []\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n    },\n  ]\n}\n\nfunction getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n  const moveUpPatches = getArrayMovePatches(node, doc, 'previous')\n  const moveDownPatches = getArrayMovePatches(node, doc, 'next')\n  const moveFirstPatches = getArrayMovePatches(node, doc, 'first')\n  const moveLastPatches = getArrayMovePatches(node, doc, 'last')\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n    })\n  }\n\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nfunction getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): ContextMenuNode[] {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...getMoveItems(context))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nfunction getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): ContextMenuNode[] {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...getMoveItems(context))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState, type FunctionComponent} from 'react'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {useDocuments} from '../optimistic-state/useDocuments'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n    }\n  }, [node, onDismiss])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const Icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  const items = useMemo(() => {\n    const doc = getDocument(node.id)\n    if (!doc) return []\n    return getContextMenuItems({node, field, parent, doc})\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">\n                <Text size={1}>{Icon}</Text>\n              </Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {title}\n                </Text>\n              </Stack>\n            </Flex>\n\n            <MenuDivider />\n\n            {items.map((item, i) => (\n              <ContextMenuItem\n                key={i}\n                node={item}\n                onDismiss={onDismiss}\n                boundaryElement={boundaryElement}\n              />\n            ))}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {pathToUrlString} from '@repo/visual-editing-helpers'\nimport {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is ReactElement => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const Icon = useMemo(() => {\n    if (schemaType?.icon) return <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n    return <DocumentIcon />\n  }, [schemaType?.icon])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingBottom={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n\n      {title && (\n        <Tab gap={1} paddingBottom={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{Icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => {\n    try {\n      const parsed = new URL(props.href)\n      parsed.searchParams.set('preview', referer)\n      return parsed.toString()\n    } catch {\n      return props.href\n    }\n  }, [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {SanityNode, VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {useEffect, useMemo, useState, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch(\n          {\n            type: 'visual-editing/schema',\n            data: undefined,\n          },\n          {signal, suppressWarnings: true},\n        )\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    const controller = new AbortController()\n    fetchSchema(controller.signal)\n    return () => controller.abort()\n  }, [fetchSchema])\n\n  // We report a list of paths that reference array items using a _key. We need\n  // to resolve the types of each of these items so we can map them to the\n  // correct schema types. One day CSM might include this data for us.\n  const reportPaths = useCallback(\n    async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          {\n            type: 'visual-editing/schema-union-types',\n            data: {paths},\n          },\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [elements, reportPaths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      type: T = 'document' as T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@repo/visual-editing-helpers'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const {[data.key]: _removed, ...rest} = prev\n          return rest\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const value = await comlink?.fetch(\n          {type: 'visual-editing/shared-state', data: undefined},\n          {suppressWarnings: true},\n        )\n        if (value) {\n          store.setState(() => value.state)\n        }\n      } catch {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date',\n        )\n      }\n    }\n    fetch()\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {isAltKey, isHotkey, type VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {Status} from '@sanity/comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes.ts'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {useOptimisticActor, useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider.tsx'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post({type: 'visual-editing/focus', data: sanity})\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post({type: 'visual-editing/toggle', data: {enabled: true}})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post({type: 'visual-editing/toggle', data: {enabled: false}})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        element.style.cursor = cursor\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const elementsToRender = useMemo(() => {\n    if (inFrame && status !== 'connected') {\n      return []\n    }\n    return elements.filter((e) => e.activated || e.focused)\n  }, [elements, inFrame, status])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  return (\n    <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n      <LayerProvider>\n        <PortalProvider element={rootElement}>\n          <SchemaProvider comlink={comlink} elements={elements}>\n            <PreviewSnapshotsProvider comlink={comlink}>\n              <SharedStateProvider comlink={comlink}>\n                <Root\n                  data-fading-out={fadingOut ? '' : undefined}\n                  data-overlays={overlaysFlash ? '' : undefined}\n                  ref={setRootElement}\n                  $zIndex={zIndex}\n                >\n                  <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                  <OverlaysController\n                    comlink={comlink}\n                    dispatch={dispatch}\n                    inFrame={inFrame}\n                    onDrag={updateDragPreviewCustomProps}\n                    overlayEnabled={overlayEnabled}\n                    rootElement={rootElement}\n                  />\n                  {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                  {!isDragging &&\n                    elementsToRender.map(\n                      ({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n                        const draggable =\n                          !dragDisabled &&\n                          !!element.getAttribute('data-sanity') &&\n                          optimisticActorReady &&\n                          elements.some((e) =>\n                            'id' in e.sanity && 'id' in sanity\n                              ? sanityNodesExistInSameArray(e.sanity, sanity) &&\n                                e.sanity.path !== sanity.path\n                              : false,\n                          )\n\n                        return (\n                          <ElementOverlay\n                            componentResolver={componentResolver}\n                            element={element}\n                            enableScrollIntoView={\n                              !isDragging && !dragMinimapTransition && !dragShowMinimap\n                            }\n                            key={id}\n                            focused={focused}\n                            hovered={hovered}\n                            node={sanity}\n                            rect={rect}\n                            showActions={!inFrame}\n                            draggable={draggable}\n                            isDragging={isDragging || dragMinimapTransition}\n                            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n                          />\n                        )\n                      },\n                    )}\n\n                  {isDragging && !dragMinimapTransition && (\n                    <>\n                      {dragInsertPosition && (\n                        <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                      )}\n                      {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                      {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                    </>\n                  )}\n                  {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                </Root>\n              </SharedStateProvider>\n            </PreviewSnapshotsProvider>\n          </SchemaProvider>\n        </PortalProvider>\n      </LayerProvider>\n    </ThemeProvider>\n  )\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {useDocuments} from '../ui/optimistic-state/useDocuments'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(({snapshot}) => {\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport type {OverlayController, OverlayEventHandler} from '../types'\nimport {useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>()\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch(\n        {type: 'visual-editing/fetch-perspective', data: undefined},\n        {signal: controller.signal, suppressWarnings: true},\n      )\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\nimport type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post({\n        type: 'visual-editing/documents',\n        data: {\n          documents,\n          perspective,\n        },\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return {\n          ...sanity,\n          id: 'isDraft' in sanity ? `${DRAFTS_PREFIX}${sanity.id}` : sanity.id,\n        }\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post({type: 'visual-editing/refreshing', data})\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post({type: 'visual-editing/refreshed', data})\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post({type: 'visual-editing/refreshed', data})\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post({type: 'visual-editing/refreshing', data})\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post({type: 'visual-editing/refreshing', data})\n            promise?.finally?.(() => {\n              comlink.post({type: 'visual-editing/refreshed', data})\n            }) || comlink.post({type: 'visual-editing/refreshed', data})\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post({type: 'visual-editing/refreshed', data})\n          }) || comlink.post({type: 'visual-editing/refreshed', data})\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {createNode, createNodeMachine} from '@sanity/comlink'\nimport {useEffect, useState, type FunctionComponent} from 'react'\nimport {createActor} from 'xstate'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\nimport {createDatasetMutator} from './comlink'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {setActor} from './optimistic-state/context'\nimport {createSharedListener} from './optimistic-state/machines/createSharedListener'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\n\n/**\n * @public\n */\nexport const VisualEditing: FunctionComponent<VisualEditingOptions> = (props) => {\n  const {components, history, refresh, zIndex} = props\n  const inFrame = window.self !== window.top || window.opener\n\n  const [comlink, setComlink] = useState<VisualEditingNode | undefined>(undefined)\n\n  useEffect(() => {\n    if (!inFrame) return\n    const comlink = createNode<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    setComlink(comlink)\n\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const actor = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    // Fetch features to determine if optimistic updates are supported\n    const controller = new AbortController()\n    comlink\n      .fetch(\n        {type: 'visual-editing/features', data: undefined},\n        {signal: controller.signal, suppressWarnings: true},\n      )\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(actor)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    actor.start()\n    comlink.start()\n\n    return () => {\n      controller.abort()\n      actor.stop()\n      comlink.stop()\n    }\n  }, [inFrame])\n\n  return (\n    <>\n      <Overlays\n        comlink={comlink}\n        componentResolver={components}\n        inFrame={inFrame}\n        zIndex={zIndex}\n      />\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, Observable, ReplaySubject, Subject, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch({type: 'visual-editing/snapshot-welcome', data: undefined}, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n"],"names":["jsx","jsxs","Fragment","isAltKey","isHotkey","createCompatibilityActors","c","createNode","createNodeMachine","useEffect","useCallback","createContext","useContext","useState","useMemo","memo","useRef","useSyncExternalStore","isValidElement","useReducer","fromPromise","createActor","SanityEncoder","at","remove","insert","documentMutatorMachine","datasetMutatorMachine","useDocuments","getArrayItemKeyAndParentPath","get","getArrayInsertPatches","getArrayMovePatches","getArrayRemovePatches","getArrayDuplicatePatches","useOptimisticActorReady","useOptimisticActor","getDraftId","getPublishedId","setActor","ReplaySubject","Subject","merge","InsertAboveIcon","InsertBelowIcon","getNodeIcon","CopyIcon","RemoveIcon","SortIcon","MenuGroup","InsertMenu","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","PopoverPortal","Popover","Menu","Flex","Box","Text","Stack","MenuDivider","MenuItem","dt","Card","DocumentIcon","DragHandleIcon","PointerEvents","usePrefersDark","useTheme_v2","Hotkeys","ExpandIcon","ThemeProvider","studioTheme","LayerProvider","PortalProvider","isHTMLAnchorElement","isHTMLElement","SharedStateContext","createOverlayController","sanityNodesExistInSameArray","createEditUrl","studioPath","pathToUrlString","DRAFTS_PREFIX","scrollIntoView","History","props","comlink","history","on","data","update","subscribe","title","document","post","type","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","SchemaContext","useSchema","context","Error","getArrayRemoveAction","node","doc","patch","snapshot","getArrayInsertAction","insertType","position","getDuplicateAction","getContextMenuItems","field","parent","items","push","getDuplicateItem","getRemoveItems","getMoveItems","label","icon","action","name","getContextMenuArrayItems","options","insertMenu","width","views","some","view","component","boundaryElement","InsertMenuWrapper","onSelect","schemaType","of","filter","item","map","t","getContextMenuUnionItems","withDivider","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","length","fontSize","padding","popover","arrow","constrainSize","floatingBoundary","placement","fallbackPlacements","preventOverflow","__unstable_margins","space","text","children","POPOVER_MARGINS","ContextMenuItem","onDismiss","onClick","hotkeys","disabled","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","getField","getDocument","Icon","id","contextMenuReferenceElement","getBoundingClientRect","bottom","left","right","top","height","open","referenceElement","content","style","minWidth","maxWidth","gap","flex","size","weight","i","PreviewSnapshotsContext","Root","styled","Actions","ActionOpen","Tab","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","href","path","baseUrl","tool","workspace","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","find","_id","dangerouslySetInnerHTML","__html","componentContext","value","customComponents","resolved","Array","isArray","paddingBottom","Link","marginRight","className","ElementOverlay","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","scrolledIntoViewRef","w","h","transform","current","behavior","actions","block","inline","scrollMode","referer","onStoreChange","handlePopState","window","addEventListener","removeEventListener","location","parsed","URL","searchParams","set","toString","as","rel","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","theme","radius","number","inMin","inMax","outMin","outMax","clamp","imageRects","childRects","r","tagName","textRects","$offsetX","$offsetY","shadow","overflow","tone","scheme","viewBox","fill","color","from","OverlayMinimapPrompt","align","keys","elementsReducer","elements","message","e","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","slice","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","snapshots","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","resolvedTypes","setResolvedTypes","Map","schema","setSchema","fetchSchema","async","signal","response","fetch","suppressWarnings","controller","AbortController","abort","reportPaths","paths","types","reportedPathsRef","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","p","nodePath","flatMap","fieldFromPath","prevPath","next","rest","objectField","fields","Boolean","console","warn","store","initialState","listeners","Set","getState","setState","fn","forEach","l","listener","add","delete","createStore","SharedStateProvider","prev","key","_removed","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","prevId","actor","send","documentId","OverlaysController","dispatch","inFrame","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","detail","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","arrayPath","referenceItemKey","elementValue","getFromPath","_key","event","customEvent","CustomEvent","cancelable","dispatchEvent","useDragEndEvents","overlayController","optimisticActorReady","overlayElement","destroy","useController","enabled","dragGroup","flow","cursor","activate","deactivate","Overlays","_componentResolver","status","setStatus","setRootElement","setOverlayEnabled","unsubs","onStatus","unsub","then","catch","usePerspectiveSync","lastReported","reportDocuments","documents","nodes","s","nodeIds","a","b","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","_type","useReportDocuments","updateDragPreviewCustomProps","setProperty","scrollY","handleClick","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","handleKeyUp","handleKeydown","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","elementsToRender","closeContextMenu","getAttribute","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise2","VisualEditing","components","self","opener","setComlink","connectTo","provide","actors","incomingConnection$","incomingMutations$","createSharedListener","datasetMutator","fetchSnapshot","input","submitMutations","transactions","transaction","encodeTransaction","createDatasetMutator","client","withConfig","sharedListener","features","optimistic","start","stop","displayName"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},
    {"offset": {"line": 1743, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}