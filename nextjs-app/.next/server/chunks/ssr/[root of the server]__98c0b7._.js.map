{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { draftMode } from \"next/headers\";\n\nexport async function disableDraftMode() {\n  \"use server\";\n  await Promise.allSettled([\n    (await draftMode()).disable(),\n    // Simulate a delay to show the loading state\n    new Promise((resolve) => setTimeout(resolve, 1000)),\n  ]);\n}\n"],"names":[],"mappings":";;;;;IAIsB"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/DraftModeToast.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  useDraftModeEnvironment,\n  useIsPresentationTool,\n} from \"next-sanity/hooks\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useTransition } from \"react\";\nimport { toast } from \"sonner\";\nimport { disableDraftMode } from \"@/app/actions\";\n\nexport default function DraftModeToast() {\n  const isPresentationTool = useIsPresentationTool();\n  const env = useDraftModeEnvironment();\n  const router = useRouter();\n  const [pending, startTransition] = useTransition();\n\n  useEffect(() => {\n    if (isPresentationTool === false) {\n      /**\n       * We delay the toast in case we're inside Presentation Tool\n       */\n      const toastId = toast(\"Draft Mode Enabled\", {\n        description:\n          env === \"live\"\n            ? \"Content is live, refreshing automatically\"\n            : \"Refresh manually to see changes\",\n        duration: Infinity,\n        action: {\n          label: \"Disable\",\n          onClick: () =>\n            startTransition(async () => {\n              await disableDraftMode();\n              startTransition(() => router.refresh());\n            }),\n        },\n      });\n      return () => {\n        toast.dismiss(toastId);\n      };\n    }\n  }, [env, router, isPresentationTool]);\n\n  useEffect(() => {\n    if (pending) {\n      const toastId = toast.loading(\"Disabling draft mode...\");\n      return () => {\n        toast.dismiss(toastId);\n      };\n    }\n  }, [pending]);\n\n  return null;\n}\n"],"names":[],"mappings":";;;AAMA;AACA;AACA;AACA;AAPA;AAFA;;;;;;AAWe,SAAS;IACtB,MAAM,qBAAqB,CAAA,GAAA,2JAAA,CAAA,wBAAqB,AAAD;IAC/C,MAAM,MAAM,CAAA,GAAA,2JAAA,CAAA,0BAAuB,AAAD;IAClC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,uBAAuB,OAAO;YAChC;;OAEC,GACD,MAAM,UAAU,CAAA,GAAA,wIAAA,CAAA,QAAK,AAAD,EAAE,sBAAsB;gBAC1C,aACE,QAAQ,SACJ,8CACA;gBACN,UAAU;gBACV,QAAQ;oBACN,OAAO;oBACP,SAAS,IACP,gBAAgB;4BACd,MAAM,CAAA,GAAA,8GAAA,CAAA,mBAAgB,AAAD;4BACrB,gBAAgB,IAAM,OAAO,OAAO;wBACtC;gBACJ;YACF;YACA,OAAO;gBACL,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAChB;QACF;IACF,GAAG;QAAC;QAAK;QAAQ;KAAmB;IAEpC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS;YACX,MAAM,UAAU,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAC9B,OAAO;gBACL,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YAChB;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,OAAO;AACT"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/client-utils.ts"],"sourcesContent":["\"use client\";\n\nimport { isCorsOriginError } from \"next-sanity\";\nimport { toast } from \"sonner\";\n\nexport function handleError(error: unknown) {\n  if (isCorsOriginError(error)) {\n    // If the error is a CORS origin error, lets display that specific error.\n    const { addOriginUrl } = error;\n    toast.error(`Sanity Live couldn't connect`, {\n      description: `Your origin is blocked by CORS policy`,\n      duration: Infinity,\n      action: addOriginUrl\n        ? {\n            label: \"Manage\",\n            onClick: () => window.open(addOriginUrl.toString(), \"_blank\"),\n          }\n        : undefined,\n    });\n  } else if (error instanceof Error) {\n    console.error(error);\n    toast.error(error.name, { description: error.message, duration: Infinity });\n  } else {\n    console.error(error);\n    toast.error(\"Unknown error\", {\n      description: \"Check the console for more details\",\n      duration: Infinity,\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAGA;AADA;AAFA;;;AAKO,SAAS,YAAY,KAAc;IACxC,IAAI,CAAA,GAAA,wLAAA,CAAA,oBAAiB,AAAD,EAAE,QAAQ;QAC5B,yEAAyE;QACzE,MAAM,EAAE,YAAY,EAAE,GAAG;QACzB,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,4BAA4B,CAAC,EAAE;YAC1C,aAAa,CAAC,qCAAqC,CAAC;YACpD,UAAU;YACV,QAAQ,eACJ;gBACE,OAAO;gBACP,SAAS,IAAM,OAAO,IAAI,CAAC,aAAa,QAAQ,IAAI;YACtD,IACA;QACN;IACF,OAAO,IAAI,iBAAiB,OAAO;QACjC,QAAQ,KAAK,CAAC;QACd,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE;YAAE,aAAa,MAAM,OAAO;YAAE,UAAU;QAAS;IAC3E,OAAO;QACL,QAAQ,KAAK,CAAC;QACd,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,iBAAiB;YAC3B,aAAa;YACb,UAAU;QACZ;IACF;AACF"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}