{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/Date.tsx"],"sourcesContent":["import { format } from \"date-fns\";\n\nexport default function DateComponent({\n  dateString,\n}: {\n  dateString: string | undefined;\n}) {\n  if (!dateString) {\n    return null;\n  }\n\n  return (\n    <time dateTime={dateString}>\n      {format(new Date(dateString), \"LLLL\td, yyyy\")}\n    </time>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,cAAc,EACpC,UAAU,EAGX;IACC,IAAI,CAAC,YAAY;QACf,OAAO;IACT;IAEA,qBACE,8OAAC;QAAK,UAAU;kBACb,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,aAAa;;;;;;AAGpC"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/Onboarding.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PageOnboarding = registerClientReference(\n    function() { throw new Error(\"Attempted to call PageOnboarding() from the server but PageOnboarding is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Onboarding.tsx <module evaluation>\",\n    \"PageOnboarding\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Onboarding.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Onboarding.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+DACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/Onboarding.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PageOnboarding = registerClientReference(\n    function() { throw new Error(\"Attempted to call PageOnboarding() from the server but PageOnboarding is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Onboarding.tsx\",\n    \"PageOnboarding\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/Onboarding.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/Onboarding.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;uCAEW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/Posts.tsx"],"sourcesContent":["import Link from \"next/link\";\n\nimport { sanityFetch } from \"@/sanity/lib/live\";\nimport { morePostsQuery, allPostsQuery } from \"@/sanity/lib/queries\";\nimport { Post as PostType } from \"@/sanity.types\";\nimport DateComponent from \"@/app/components/Date\";\nimport OnBoarding from \"@/app/components/Onboarding\";\n\ntype PostProps = {\n  post: PostType;\n};\n\nconst Post = ({ post }: PostProps) => {\n  const { _id, title, slug, excerpt, date } = post;\n\n  return (\n    <article\n      key={_id}\n      className=\"flex max-w-xl flex-col items-start justify-between\"\n    >\n      <div className=\"text-gray-500 text-sm\">\n        <DateComponent dateString={date} />\n      </div>\n\n      <h3 className=\"mt-3 text-2xl font-semibold\">\n        <Link\n          className=\"hover:text-red-500 underline transition-colors\"\n          href={`/posts/${slug}`}\n        >\n          {title}\n        </Link>\n      </h3>\n      <p className=\"mt-5 line-clamp-3 text-sm leading-6 text-gray-600\">\n        {excerpt}\n      </p>\n    </article>\n  );\n};\n\ntype PostsProps = {\n  children: React.ReactNode;\n  heading?: string;\n  subHeading?: string;\n};\n\nconst Posts = ({ children, heading, subHeading }: PostsProps) => (\n  <div>\n    {heading && (\n      <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl lg:text-5xl\">\n        {heading}\n      </h2>\n    )}\n    {subHeading && (\n      <p className=\"mt-2 text-lg leading-8 text-gray-600\">{subHeading}</p>\n    )}\n    <div className=\"mt-6 pt-6 space-y-12 border-t border-gray-200\">\n      {children}\n    </div>\n  </div>\n);\n\ntype MorePostsProps = {\n  skip: string;\n  limit: number;\n};\n\nexport const MorePosts = async ({ skip, limit }: MorePostsProps) => {\n  const { data } = await sanityFetch({\n    query: morePostsQuery,\n    params: { skip, limit },\n  });\n\n  if (!data || data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Posts heading={`Recent blog posts from Sanity (${data?.length})`}>\n      {data?.map((post: any) => <Post key={post._id} post={post} />)}\n    </Posts>\n  );\n};\n\nexport const AllPosts = async () => {\n  const { data } = await sanityFetch({ query: allPostsQuery });\n\n  if (!data || data.length === 0) {\n    return <OnBoarding />;\n  }\n\n  return (\n    <Posts\n      heading=\"Blog posts from Sanity\"\n      subHeading={`${data.length === 1 ? \"This blog post is\" : `These ${data.length} blog posts are`} populated from your Sanity Studio.`}\n    >\n      {data.map((post: any) => (\n        <Post key={post._id} post={post} />\n      ))}\n    </Posts>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;AAMA,MAAM,OAAO,CAAC,EAAE,IAAI,EAAa;IAC/B,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;IAE5C,qBACE,8OAAC;QAEC,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0HAAA,CAAA,UAAa;oBAAC,YAAY;;;;;;;;;;;0BAG7B,8OAAC;gBAAG,WAAU;0BACZ,cAAA,8OAAC,4HAAA,CAAA,UAAI;oBACH,WAAU;oBACV,MAAM,CAAC,OAAO,EAAE,MAAM;8BAErB;;;;;;;;;;;0BAGL,8OAAC;gBAAE,WAAU;0BACV;;;;;;;OAhBE;;;;;AAoBX;AAQA,MAAM,QAAQ,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAc,iBAC1D,8OAAC;;YACE,yBACC,8OAAC;gBAAG,WAAU;0BACX;;;;;;YAGJ,4BACC,8OAAC;gBAAE,WAAU;0BAAwC;;;;;;0BAEvD,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;AAUA,MAAM,YAAY,OAAO,EAAE,IAAI,EAAE,KAAK,EAAkB;IAC7D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE;QACjC,OAAO,wHAAA,CAAA,iBAAc;QACrB,QAAQ;YAAE;YAAM;QAAM;IACxB;IAEA,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,OAAO;IACT;IAEA,qBACE,8OAAC;QAAM,SAAS,CAAC,+BAA+B,EAAE,MAAM,OAAO,CAAC,CAAC;kBAC9D,MAAM,IAAI,CAAC,qBAAc,8OAAC;gBAAoB,MAAM;eAAhB,KAAK,GAAG;;;;;;;;;;AAGnD;AAEO,MAAM,WAAW;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE;QAAE,OAAO,wHAAA,CAAA,gBAAa;IAAC;IAE1D,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBAAO,8OAAC,gIAAA,CAAA,UAAU;;;;;IACpB;IAEA,qBACE,8OAAC;QACC,SAAQ;QACR,YAAY,GAAG,KAAK,MAAM,KAAK,IAAI,sBAAsB,CAAC,MAAM,EAAE,KAAK,MAAM,CAAC,eAAe,CAAC,CAAC,mCAAmC,CAAC;kBAElI,KAAK,GAAG,CAAC,CAAC,qBACT,8OAAC;gBAAoB,MAAM;eAAhB,KAAK,GAAG;;;;;;;;;;AAI3B"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/GetStartedCode.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/GetStartedCode.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/GetStartedCode.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/components/GetStartedCode.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/GetStartedCode.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/GetStartedCode.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/page.tsx"],"sourcesContent":["import { Suspense } from \"react\";\nimport Link from \"next/link\";\n\nimport { AllPosts } from \"@/app/components/Posts\";\nimport GetStartedCode from \"@/app/components/GetStartedCode\";\n\nexport default async function Page() {\n  return (\n    <>\n      <div className=\"bg-gradient-to-r from-red-200 from-0% via-white via-40%  relative\">\n        <div className=\"bg-gradient-to-b from-white w-full h-40 absolute top-0\"></div>\n        <div className=\"bg-gradient-to-t from-white w-full h-40 absolute bottom-0\"></div>\n        <div className=\"container relative\">\n          <div className=\"mx-auto max-w-2xl py-20 lg:max-w-4xl lg:px-12 text-center\">\n            <div className=\"flex flex-col gap-4 items-center\">\n              <div className=\" text-md leading-6 prose uppercase\">\n                A starter template for\n              </div>\n              <h1 className=\"font-display text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter text-black\">\n                <Link className=\"text-red-500 \" href=\"https://sanity.io/\">\n                  Sanity\n                </Link>{\" \"}\n                +{\" \"}\n                <Link className=\"text-[#000] \" href=\"https://nextjs.org/\">\n                  Next.js\n                </Link>\n              </h1>\n            </div>\n            <div className=\"mt-6 space-y-6 prose sm:prose-lg md:prose-xl lg:prose-2xl text-gray-700\">\n              <p>\n                This starter is a statically generated site that uses Next.js\n                for the frontend and Sanity to handle its content. It comes with\n                a standalone Sanity Studio that offers features like real-time\n                collaboration, instant side-by-side content previews, and\n                intuitive editing.\n              </p>\n            </div>\n            <div className=\"flex items-center flex-col gap-4\">\n              <GetStartedCode code=\"npm create sanity@latest\" />\n              <Link\n                href=\"https://www.sanity.io/docs\"\n                className=\"inline-flex text-red-500 text-xs md:text-sm underline hover:text-gray-900\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Sanity Documentation\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  className=\"w-4 h-4 ml-1 inline\"\n                  fill=\"currentColor\"\n                >\n                  <path d=\"M10 6V8H5V19H16V14H18V20C18 20.5523 17.5523 21 17 21H4C3.44772 21 3 20.5523 3 20V7C3 6.44772 3.44772 6 4 6H10ZM21 3V12L17.206 8.207L11.2071 14.2071L9.79289 12.7929L15.792 6.793L12 3H21Z\"></path>\n                </svg>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"border-t border-gray-10\">\n        <div className=\"container\">\n          <aside className=\"py-12 sm:py-20\">\n            <Suspense>\n              <AllPosts />\n            </Suspense>\n          </aside>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;;;;;;AAEe,eAAe;IAC5B,qBACE;;0BACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAAqC;;;;;;sDAGpD,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC,4HAAA,CAAA,UAAI;oDAAC,WAAU;oDAAgB,MAAK;8DAAqB;;;;;;gDAElD;gDAAI;gDACV;8DACF,8OAAC,4HAAA,CAAA,UAAI;oDAAC,WAAU;oDAAe,MAAK;8DAAsB;;;;;;;;;;;;;;;;;;8CAK9D,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;kDAAE;;;;;;;;;;;8CAQL,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oIAAA,CAAA,UAAc;4CAAC,MAAK;;;;;;sDACrB,8OAAC,4HAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAU;4CACV,QAAO;4CACP,KAAI;;gDACL;8DAEC,8OAAC;oDACC,OAAM;oDACN,SAAQ;oDACR,WAAU;oDACV,MAAK;8DAEL,cAAA,8OAAC;wDAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOpB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;kCACf,cAAA,8OAAC,qMAAA,CAAA,WAAQ;sCACP,cAAA,8OAAC,2HAAA,CAAA,WAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvB"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { draftMode } from \"next/headers\";\n\nexport async function disableDraftMode() {\n  \"use server\";\n  await Promise.allSettled([\n    (await draftMode()).disable(),\n    // Simulate a delay to show the loading state\n    new Promise((resolve) => setTimeout(resolve, 1000)),\n  ]);\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe;IAEpB,MAAM,QAAQ,UAAU,CAAC;QACvB,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,YAAS,AAAD,GAAG,EAAE,OAAO;QAC3B,6CAA6C;QAC7C,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;KAC9C;AACH;;;IAPsB;;AAAA,+OAAA"}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}