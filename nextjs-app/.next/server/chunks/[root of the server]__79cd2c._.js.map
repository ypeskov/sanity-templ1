{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/sanity/lib/api.ts"],"sourcesContent":["/**\n * As this file is reused in several other files, try to keep it lean and small.\n * Importing other npm packages here could lead to needlessly increasing the client bundle size, or end up in a server-only function that don't need it.\n */\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage);\n  }\n\n  return v;\n}\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_DATASET\"\n);\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\"\n);\n\n/**\n * see https://www.sanity.io/docs/api-versioning for how versioning works\n */\nexport const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-10-28\";\n\n/**\n * Used to configure edit intent links, for Presentation Mode, as well as to configure where the Studio is mounted in the router.\n */\nexport const studioUrl =\n  process.env.NEXT_PUBLIC_SANITY_STUDIO_URL || \"http://localhost:3333\";\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAED,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAMK,MAAM,aACX,kDAA8C;AAKzC,MAAM,YACX,wCAA6C"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from \"next-sanity\";\n\nimport { apiVersion, dataset, projectId, studioUrl } from \"@/sanity/lib/api\";\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true,\n  perspective: \"published\",\n  stega: {\n    studioUrl,\n    // Set logger to 'console' for more verbose logging\n    // logger: console,\n    filter: (props) => {\n      if (props.sourcePath.at(-1) === \"title\") {\n        return true;\n      }\n\n      return props.filterDefault(props);\n    },\n  },\n});\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AAIO,MAAM,SAAS,CAAA,GAAA,gLAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,sHAAA,CAAA,YAAS;IACT,SAAA,sHAAA,CAAA,UAAO;IACP,YAAA,sHAAA,CAAA,aAAU;IACV,QAAQ;IACR,aAAa;IACb,OAAO;QACL,WAAA,sHAAA,CAAA,YAAS;QACT,mDAAmD;QACnD,mBAAmB;QACnB,QAAQ,CAAC;YACP,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS;gBACvC,OAAO;YACT;YAEA,OAAO,MAAM,aAAa,CAAC;QAC7B;IACF;AACF"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/sanity/lib/token.ts"],"sourcesContent":["import \"server-only\";\n\nexport const token = process.env.SANITY_API_READ_TOKEN;\n\nif (!token) {\n  throw new Error(\"Missing SANITY_API_READ_TOKEN\");\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACV,MAAM,IAAI,MAAM;AAClB"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/ypeskov/Projects/CMS/Sanity3/nextjs-app/app/api/draft-mode/enable/route.ts"],"sourcesContent":["import { defineEnableDraftMode } from \"next-sanity/draft-mode\";\n\nimport { client } from \"@/sanity/lib/client\";\nimport { token } from \"@/sanity/lib/token\";\n\n/**\n * defineEnableDraftMode() is used to enable draft mode. Set the route of this file\n * as the previewMode.enable option for presentationTool in your sanity.config.ts\n * Learn more: https://github.com/sanity-io/next-sanity?tab=readme-ov-file#5-integrating-with-sanity-presentation-tool--visual-editing\n */\n\nexport const { GET } = defineEnableDraftMode({\n  client: client.withConfig({ token }),\n});\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;;AAWO,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,wBAAqB,AAAD,EAAE;IAC3C,QAAQ,yHAAA,CAAA,SAAM,CAAC,UAAU,CAAC;QAAE,OAAA,wHAAA,CAAA,QAAK;IAAC;AACpC"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}